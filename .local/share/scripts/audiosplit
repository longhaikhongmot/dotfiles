#!/bin/sh

audiosplit() {
    # Requires ffmpeg
    [ ! -f "$2" ] && printf "The first file should be the audio, the second should be the timecodes.\\n" && return 1

    echo "Enter the audio title:"
    read -r audio_title

    # Get a safe file name from the book
    export_directory="$(echo "$audio_title" |
        iconv -c -f UTF-8 -t ASCII//TRANSLIT |
        tr -d '[:punct:]' |
        tr '[:upper:]' '[:lower:]' |
        tr ' ' '-' |
        sed "s/-\+/-/g;s/\(^-\|-\$\)//g")"

    ! mkdir -p "$export_directory" &&
        echo "Do you have write access in this directory?" &&
        exit 1

    input_timecodes="$2"
    total_track="$(wc -l <"$input_timecodes")"
    input_audio="$1"
    ext="${1##*.}"

    while IFS='' read -r timecode; do
        end_time=""
        end_time="$(echo "$timecode" | cut -d ' ' -f1)"

        # Set the output file
        output_file="$export_directory/$(printf "%.2d" "$track")-$safe_title.$ext"

        # Run ffmpeg
        if [ -n "$start_time" ]; then
            echo "---"
            echo $timecode
            echo "Extracting track $track of $total_track: $title"
            echo "From $start_time to $end_time"
            ffmpeg -ss $start_time -to $end_time -i $input_audio $output_file || return 1
            echo "---"
        fi

        # Get the title of the track
        title="$(echo "$timecode" | cut -d ' ' -f2-)"
        safe_title="$(echo "$title" |
            iconv -c -f UTF-8 -t ASCII//TRANSLIT |
            tr -d '[:punct:]' |
            tr '[:upper:]' '[:lower:]' |
            tr ' ' '-' |
            sed "s/-\+/-/g;s/\(^-\|-\$\)//g")"
        # Set time and track number
        track="$((track + 1))"
        start_time="$end_time"
    done <"$input_timecodes"
}
